[{"id":0,"href":"/menu/","title":"Menu","section":"Index","content":" Articles Notes References Terms "},{"id":1,"href":"/posts/open_my_lovely_blog/","title":"블로그 오픈 : 텍스트로 삶을 채워 가는 즐거움 (Draft)","section":"Articles","content":" 드디어 블로그를 오픈했다. 아무것도 아닌 이 일이 나에게 왜 이렇게 큰 기쁨을 주는 것일까? 아직 아무것도 없는 이 공간을 만들기까지 많은 고민이 있었다. 이제 글쓰는 기쁨을 온전히 그리고 멋지게 나누어 보고 싶다. 질문: 왜 오래 걸렸는가? # 쓰고 픈 말이 많다고 다 쓸 수 있는 것은 아니다. 필요한 기능 부터 검증하고, 필요할 글을 채워 나가자. 이 글을 틈틈히 써야 한다. 쓰고 싶다. 도대체 왜 이렇게 오래 걸렸을까?\n"},{"id":2,"href":"/notes/org_org_roam_hugo_meta_format/","title":"Org-Roam/Ox-Hugo 블로깅 할 때 확인해야 할 기능들","section":"Index","content":" Org-Roam 에서 작성한 문서를 Hugo Markdown 으로 변환하기는 쉽다. 근데 각주, 인용, 태그, 요약, 코드, 일부 내용 감추기 등을 어떻게 하는가? 여기에 대한 답을 찾는다. Summary 블록 # 요약문은 한글, 컬럼 80 으로 2.5 줄 정도 가능하다. 간단히 쓰는게 항상 답이다. 간단히 요약하기란 쉽지 않다. 하지만 중요하다. 아래와 같이 포스팅 맨 위에 짧은 글을 넣으면 된다. #+hugo: more 이 구분자 역할을 한다. 왠만하면 문서에 html 코드를 넣고 싶지 않다. 제공하는 방법을 사용한다.\nMy post summary. #+hugo: more My post content. Citation 서지 정보 자동화 # 다음과 같이 상/하단에 넣어야 한다. 레퍼런스를 달아 봅니다. SPC B i 로 바인딩을 해 놓았다. [1] [2] citar 사용법을 여기서 다룰 것은 아니다. 아무튼 깔끔하게 들어간다.\n#+EXPORT_HUGO_PANDOC_CITATIONS: t ,[cite:@HaekeowaHwaga14] #+print_bibliography: Below, the \u0026#34;References\u0026#34; heading will be auto-inserted. 여기 아래에 들어갑니다. 헤딩이 붙습니다.\nReferences # [1]P. Graham, 해커와 화가. 2014. Available: http://www.yes24.com/Product/Goods/11775130 [2]Jethro Kuan, “How I Take Notes with Org-roam,” 2022. https://jethrokuan.github.io/org-roam-guide/ (accessed May 16, 2023). Footnote 각주 관리 # 각주는 이렇게 들어갑니다. 1\n코드, 인용, 예시 블록 # \u0026lsquo;:\u0026rsquo; 을 애용한다.\n안녕하세요. 간단해서 좋습니다. example\n위에 요약문의 분량입니다. 대략 2.5 줄 정도 입니다. 한글로. quote\n위에 요약문의 분량입니다. 대략 2.5 줄 정도 입니다. 한글로.\nsrc 소스코드 블록이다.\n(with-eval-after-load \u0026#39;ox-hugo (setq org-hugo-auto-set-lastmod \u0026#39;t org-hugo-section \u0026#34;posts\u0026#34; org-hugo-suppress-lastmod-period 43200.0 ) center\n위에 요약문의 분량입니다. 대략 2.5 줄 정도 입니다. 한글로.\n일부 내용 숨기기 (noexport) # 블로그 리포는 공개되어 있다. 여기에 Markdown 파일이 그대로 있다. 숨기고 싶은 또는 숨겨야 하는 내용이 분명히 있을 것이다. 그렇다면 org 파일에서 아래와 같은 방법으로 숨기면 된다. 아예 private 프로퍼티를 넣고 ox-hugo 에서 걸러주는 방법도 있다. 나는 왠만하면 다 내용을 오픈하고자 한다. 다만 문제가 되거나 퀄리티가 많이 부족한 부분은 헤딩 수준에서 숨기길 원한다.\nnoexport 태그 활용 # 아래 헤딩은 안보입니다. 뭔가 더 있는데 안보이죠? 그럼 된겁니다.\n* 숨기고 싶은 헤딩이라면 태그를 달아라 :noexport: 파일 숨기기 (비추) # 연결 된 노트를 작성하는 경우라면 좋지 않은 방법이다. 링크를 블록하는 처리를 해줘야 한다.\n,:EXPORT_FILE_NAME: excluded-post 태그를 키워드로 변환 # 키워드로 빼고 태그는 명시하는게 좋겠다. 태그와 카테고리는 관리가 필요하다. 지식 관리를 할 때 태그, 카테고리는 매우 중요한 분류 방법이다. 태그를 마구잡이로 잡는 것은 좋지 않은 방법이다. 대략 분류를 해놓고 그 안에서 설정을 하는게 좋다. 특히 디지털 가든에서는 태그 관리가 더 중요하다. 그래서 파일 태그가 이리저리 많더라도 변환 할 때는 키워드로 할당되도록 한다. 즉 블로그의 태그는 적절하게 관리한다. 자동화가 언제나 효과적인 것은 아니다.\n#+hugo_front_matter_key_replace: tags\u0026gt;keywords Shotcodes 지원 # [2023-06-08 Thu 12:19] Hugo Book 데모 페이지를 확인한다. 2\n여기에 보면 문서 편집하기 위한 여러 코드들을 제공하고 있다. 나는 마크다운으로 편집하지 않기 때문에 각각 기능 검증이 필요하다. ox-hugo 가 있으니 문제 될 것은 없다. 오히려 이맥스의 확장성을 제한하기 때문에 선택과 집중이 필요하다.\nhint and details # [2023-06-05 Mon 13:44] org 파일에서 제공하는 기능은 아니지만 블로그에서 보다 정보를 깔끔하게 정리하기 위해서 short-code 를 사용할 수 있다. 스니펫으로 만들어 놓으니 아주 편리하다.\n이맥스의 기본 Quote 변환\nQuote\nhint 에서 레벨에 맞는 컬러 효과가 가능하다.\nhint info hint warning hint error expand 도 가능하다. (details)\nCustom Label Markdown content Lorem markdownum insigne. Olympo signis Delphis! Retexi Nereius nova develat stringit, frustra Saturnius uteroque inter! Oculis non ritibus Telethusa mermaid diagram # 벡터 포멧을 지원하지 않지만 PNG 로 바로 결과를 확인하고 내보내기가 가능한 ob-mermaid 를 활용하는게 더 편하다. 보는 입장에서도 이미지가 더 활용하기 쉽다. mermaid 다이어그램을 생성하는 방법은 2 가지다.\norg-babel : ox-mermaid Short-code : mermaid 아래와 같은 코드를 변환한다고 하자.\nDetails stateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 \u0026ndash;\u0026gt; State2 note left of State2 : This is the note to the left. org-babel 의 이점은 org 문서에서 바로 결과를 확인할 수 있다는 점이다. 편집하면서 바로 보고 블로그로 바로 내보내면 된다. 물론 로컬에 mermaid 를 설치해 놓아야 한다. 물론 ob-mermaid 로 설정은 기본이다. 3\nnpm install -g @mermaid-js/mermaid-cli 단점은 명확하다. png 만 지원 된다.\nOb-Mermaid 이용한 결과다. png 파일의 한계.\nShort-code 를 이용한 결과. 벡터 포멧의 장점\nstateDiagram-v2 State1: The state with a note note right of State1 Important information! You can write notes. end note State1 --\u0026gt; State2 note left of State2 : This is the note to the left. 적절히 사용하면 된다. 다만 캡션이 왜 안들어가는지 확인이 필요하다.\nTODO katex and math typesetting # [2023-06-08 Thu 12:18] Emacs 가지는 옵션도 많이 있다. 가장 범용적이고 쉬운 방법을 선택할 것이다. org 모드로 편집하기 때문에 여기서 preview 가 되는 것이 가장 중요하다.\nTODO 결과에 caption 넣는 방법 # [2023-06-08 Thu 12:25] 변환 된 코드 블록의 결과 이미지에 캡션을 넣어야 한다.\nOrg-translate 블록 번역 # [2023-06-08 Thu 12:52] 블록 번역 테스트.\n,#+BEGIN_SRC translate :src en :dest ko :noexport 코드 블록을 번역 하여 하단에 삽입한다.\nDoom is a configuration framework for GNU Emacs tailored for Emacs bankruptcy veterans who want less framework in their frameworks, a modicum of stability (and reproducibility) from their package manager, and the performance of a hand rolled config (or better). It can be a foundation for your own config or a resource for Emacs enthusiasts to learn more about our favorite operating system. Doom 은 프레임워크에 적은 프레임워크, 패키지 관리자의 약간의 안정성(및 재현성), 수동 구성의 성능(또는 그 이상)을 원하는 Emacs 파산 베테랑을 위해 맞춤화된 GNU Emacs 용 구성 프레임워크입니다. 자신의 구성을 위한 기초가 될 수도 있고 Emacs 애호가가 선호하는 운영 체제에 대해 자세히 알아볼 수 있는 리소스가 될 수도 있습니다.\nHow I Take Notes with Org-roam\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://hugo-book-demo.netlify.app/docs/shortcodes/katex/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\nhttps://github.com/arnm/ob-mermaid\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":3,"href":"/refs/giovannicrisalfiStartQutebrowserNow2022/","title":"Giovanni Crisalfi :: Start Qutebrowser Now (2022)","section":"Index","content":" 저자에게 파이어폭스는 마우스를 사용하게 만드는 유일한 소프트웨어였다. 빔 관련 플러그인만으로는 만족할 수 없었다. 그래서 결국 정착한 녀석이 Qutebrowser 이다. 그에게 배워보자. 레퍼런스 노트는 1. 나의 생각 2. 원문 번역 으로 구성 됩니다. 번역은 기계 번역 후 간단한 수정을 한 것 입니다. 번역은 제가 이해 가능한 수준 입니다.\n나의 생각 : 키보드 기반 웹 브라우저를 향하여! # 레퍼런스 노트는 원문 번역과 나의 생각으로 구성 된다. 오늘 다룰 글은 연습 삼아 짧은 글을 선택했다. 웹브라우저 관련 글인데 그의 설정 파일은 나에게 매우 도움이 되었다. 1\n나 역시도 이상하게 웹 브라우징을 할 때 마우스를 사용하게 된다. 플러그인을 설치해서 키보드로 사용할 수 있음에도 마우스를 사용하게 된다. 그렇다고 이맥스에서 EWW, EAF 등을 사용하지는 않는다. 참 웹 브라우저는 기존 사용자 경험을 무시하기가 어려운 녀석 중에 하나다.\n쓸만한 키보드 기반 브라우저로는 Nyxt 와 Qutebrowser 가 있다. Nyxt 는 Common Lisp 개발되어 이맥스와 궁합이 잘 맞는다고는 하는데 내 리눅스에서는 뭔가 꼬여서 잘 동작이 안된다. 아무튼 좋은 기억이 없다. 그래서 남은게 Qutebrowser 인데 패키지 매니저에서 쉽게 설치할 수 있어서 실행해보기는 참 좋다. QtWebEngine 이라 사용성에도 떨어지지 않는다. 근데 안쓰게 된다. 왜!?\n언제까지 마우스 사용 할 것인가? 해결 해야 했다. 해결 해야만 했다. 근데 급한 문제는 아니기에 영영 해결이 안될 것 같았다. 그러다가 저자의 글을 읽고 그의 설정 파일을 받아서 실행했다. 흠. 대충 감이 오는데?! 딱 이거다! 라는 생각이 들었다. 내 이맥스와 키 바인딩이 비슷하기 때문이다.\n이미 이맥스를 사용하면서 키보드 바인딩을 정리한 상황인데 또 뭘 추가한다는게 정말 불편했다. 더 편한 것도 필요 없다. 그냥 일관성만 있으면 된다. 이런 와중에 저자의 설정 파일은 운좋게 얻어 걸린 선물과도 같았다. 여전히 나는 Qutebrowser 에 정착하지 않았다. 다만 가는 길을 알았으니 조만간 도달 할 것이다.\n키보드 워크플로우는 나에게 엄청난 행복을 주었다. 이 엄청난 몰입감은 생산성 향상이라는 말로 담기에는 부족하다. 생산성 향상하자고 이렇게 하는게 아니다. 행복하자고 하는 것이다. 멀티 모니터도 이제 필요가 없다. 정말 그냥 모니터 하나 그리고 나의 전용 키보드 하나만 있으면 된다. 그리고 이맥스만 실행하면 끝난다.\n우리가 지적인 노력을 하는 모든 것은 결국 텍스트 놀이이다. 읽거나 쓰거나 말하거나 듣거나 다 텍스트 뿐이다. 인간의 언어나 컴퓨터의 언어나 다 텍스트 일 뿐이다. 그러기에 키보드 하나면 충분하다. 오직 이 뿐이다.\n스크린샷: 작성 중인 문서. org-hugo-export-wim-to-md 를 실행하면 바로 블로그로 내보내기 된다. 각주, 레퍼런스, 요약 등 완벽하게 하나다. 나는 Org 파일 하나로 다 할 수 있다. 진심으로 아름답다. 행복하다. 테마는 ef-themes 중에 \u0026lsquo;봄\u0026rsquo; 이다. 이 또한 사랑스럽다. 원문 번역 : Start Qutebrowser Now (2022) # 며칠 전 Qutebrowser 를 사용하기 시작했습니다. 실 사용을 의미합니다. 처음으로 설치한 것은 아니었습니다. 이전에 여러 번 시도해 보았지만 Firefox 를 떠날 생각은 전혀 없었습니다. 이번에는 일일 드라이버로 사용하여 전체 작업 흐름을 마이그레이션합니다.\n하지만 Firefox 를 떠나는 미친 생각을 한 이유는 무엇입니까?\n마우스를 체계적으로, 반복해서 사용하게 만든 유일한 소프트웨어였기 때문입니다. 예, 물론 Firefox 에서 많은 키 바인딩을 설정할 수 있으며 Vim Vixen 과 같은 애드온을 설치하여 키보드로만 사용할 수 있지만, 네이티브로 지원 되는 게 아니므로 여전히 불편함을 느낍니다. 즉, 모든 명령 자바스크립트를 통해 전달되어야 합니다. 물론 파이어폭스의 잘못은 아닙니다. 파이어폭스는 이와 같은 사용자를 염두에 두고 개발되지 않았기 때문에 키보드 전용으로 사용하는 방식을 상상할 수 없었을 것입니다. 아마도 오래된 확장 관련 기능을 포기하지 않았다면 실제로 키보드 기반 브라우저로 만들 수 있었을 것입니다. 하지만 WebExtension 을 켜는 것은 Mozilla 에서 제공하는 것이 아니므로 이러한 일탈(digressing)을 피해야 합니다. 즉 요점은 Firefox 는 키보드 기반 브라우저가 아니므로 다른 녀석을 찾아봐야 한다는 점 입니다.\n저와 같이 키보드에 집착하는 사용자는 실제로 소수이지만 일반적으로 끈질긴(tenacious) 프로그래머 커뮤니티에 해당합니다. 이들은 상당히 많은 키보드 기반 브라우저들을 다루고 있습니다. Qutebrowser 외에도 Surf, Nyxt(이전의 Next)와 더불어 오래된 파이어폭스를 포크한 PaleMoon 등이 있습니다.\n불행히도 이러한 브라우저에는 일반적으로 어떤 의미에서 몇 가지 제한이 있기 때문에 양이 자동으로 많은 선택을 의미하지는 않습니다. 그 중에서 Qutebrowser 가 가장 견고한 것 같습니다. Qutebrowser 에는 일련의 장점이 있습니다. PyQt5 에서 실행됩니다. 즉, Chromium 을 기반으로 하는 QtWebEngine 을 사용합니다. Chromium 의 엔진을 사용하는 것이 저를 가장 itchy 하게 만드는 것입니다. 하지만 이는 Qutebrowser 를 많은 서비스 지원과 호환성을 높이는 동시에 보안 관점에서도 신뢰하게 만드는 점임을 인정합니다.\n저자이자 관리자인 Florian Bruhin 의 헌신과 더불어 작지만 계속 이어오는 개발자 및 사용자 커뮤니티 덕분에 Qutebrowser 는 이미 테마, 북마크, 다크 모드, Brave Browser 의 Rust 라이브러리를 기반으로 하는 우수한 광고 차단과 같은 주요 요구 사항을 처리하고 있습니다. 그럼에도 불구하고 Chromium 및 Firefox 확장에서 발생하는 것과 같이 흔하지 않은 모든 문제에 대해 즉각적인 해결책을 기대할 수는 없습니다. 이러한 경우 코딩 작업 외에 다른 대안이 없습니다. 그리고 그것이 Qutebrowser 와의 실제 여정이 시작되는 곳입니다. 이와 관련하여 Qutebrowser 에 대한 저의 첫 번째 사용자 스크립트인 SwapForQute 를 참조하십시오.\nSwapForQute(또는 그냥 SFQ)는 설정하기 쉬운 구성에 따라 URL 을 새 URL 로 대체하는 qutebrowser 용 사용자 스크립트입니다.\n설치 방법, 작동 방식, 키 바인딩 빌드 방법 등에 대한 자세한 설명은 GitHub에서 저장소 확인을 참조하세요.\n레빗홀(the rebbit hole)에 더 깊이 들어가고 싶다면 my Qutebrowser literate 구성 참조도 있습니다.\nhttps://www.zwitterio.it/en/software/start-qute-now/\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n"},{"id":4,"href":"/contact/","title":"Contact","section":"Index","content":"You can contact me at the following addresses/services.\nService Username Note email me+spam@benmezger.nl Remove +spam twitter @sys_reboot Tweets are automatically deleted every few days mastodon @seds Slowly moving away from Twitter to Mastodon linkedin benmezger github benmezger telegram benmezger irc.freenode.net seds Will probably delete, see this irc.darkscience.net seds irc.libera.chat seds irc.oftc.net seds allmylinks benmezger "}]